{
  "name": "angular-formly-templates-bootstrap",
  "version": "4.0.3",
  "author": {
    "name": "Astrism",
    "email": "astrisms@gmail.com"
  },
  "contributors": [
    {
      "name": "Astrism",
      "email": "astrisms@gmail.com"
    },
    {
      "name": "Kent C. Dodds",
      "email": "kent@doddsfamily.us"
    }
  ],
  "homepage": "http://formly-js.github.io/angular-formly-templates-bootstrap/",
  "repository": {
    "type": "git",
    "url": "git://github.com/formly-js/angular-formly-templates-bootstrap.git"
  },
  "main": "dist/angular-formly-templates-bootstrap.js",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.githubusercontent.com/formly-js/angular-formly-templates-bootstrap/master/LICENSE"
    }
  ],
  "scripts": {
    "build:dist": "node node_modules/webpack/bin/webpack.js",
    "build:minify": "node node_modules/webpack/bin/webpack.js --config webpack.config.minify.js",
    "build": "npm run build:dist; npm run build:minify",
    "test": "node node_modules/karma/bin/karma start karma.conf.js",
    "test:single": "node node_modules/karma/bin/karma start karma.conf.js --single-run",
    "test:ci": "node node_modules/karma/bin/karma start karma.conf.ci.js",
    "watch": "node node_modules/webpack/bin/webpack.js --watch",
    "start": "npm run watch & npm run test",
    "release": "git push && npm publish && git push --tags"
  },
  "description": "Angular-Formly plugin which outputs bootstrap compatible form fields.",
  "peerDependencies": {
    "angular": "^1.2.x",
    "angular-formly": "^4.0.5",
    "api-check": "^6.0.10"
  },
  "devDependencies": {
    "babel-core": "^4.5.5",
    "babel-loader": "^4.0.0",
    "deep-extend": "^0.3.2",
    "jshint": "2.6.0",
    "jshint-loader": "^0.8.3",
    "lodash-node": "^2.4.1",
    "ng-annotate": "^0.15.4",
    "raw-loader": "^0.5.1",
    "webpack": "^1.6.0"
  },
  "readme": "[![Build Status](https://travis-ci.org/formly-js/angular-formly.svg)](https://travis-ci.org/formly-js/angular-formly)\n[![Coverage Status](https://img.shields.io/coveralls/formly-js/angular-formly.svg)](https://coveralls.io/r/formly-js/angular-formly)\n\n## Angular-Formly: Bootstrap Template\nThis is a template for Angular-Formly which adds templates with classes specific to bootstrap. Each field is wrapped in a div. This library is not standalone and requires angular-formly to be present and loaded.\n\n### NOTICE: UPGRADING FROM 2.0 to 3.0?\n\nThere were some [significant changes](https://github.com/formly-js/angular-formly/blob/master/CHANGELOG.md) that you'll want to be aware of. In order to upgrade and get all the cool features, you're going to need to change your field configurations. [Here is a tool](http://jsbin.com/ruwoke) that should help make that process easier. Also, if you are not able to update the configuration very easily, see [this issue](https://github.com/formly-js/angular-formly/issues/162) for ideas on how to ease things a little.\n\n### Demo http://formly-js.github.io/angular-formly\n\n## Dependencies\n- Required to use Formly:\n - Angular\n - Angular-Formly\n\n- Dev dependencies to build Formly\n - npm\n\n\n## Install in your project\n- Install [Angular-Formly](https://github.com/formly-js/angular-formly)\n\n- Install Angular-Formly: Bootstrap Templates\n `$ bower install angular-formly angular-formly-templates-bootstrap --save`\n\n or\n\n `$ npm install angular-formly angular-formly-templates-bootstrap --save`\n\n- Include the javascript file in your index.html, Formly comes in the following flavors:\n `<script src=\"bower_components/angular-formly/dist/formly.min.js\"></script>`\n `<script src=\"bower_components/angular-formly-templates-bootstrap/dist/angular-formly-templates-bootstrap.min.js\"></script>`\n\n and\n\n `angular.module('yourModule', ['formly', 'formlyBootstrap']);`\n\n or\n\n `angular.module('yourModule', [require('angular-formly'), require('angular-formly-templates-bootstrap')]);`\n\n## Documentation\n\nSee [Angular-Formly](https://github.com/formly-js/angular-formly) for formly core documentation.\n\n### Common Properties\n\nNOTE: All of these properties will be under the `templateOptions` property as of angular-formly 3.0.0\n\n---\n##### label (string)\n>`label` is used to add an html label to each field.\n\n###### Default\n>A default is set for each field based on its type. ie `Text`, `Checkbox`, `Password`\n\n---\n##### required (boolean)\n>`required` is used to add the required attribute to a form field.\n\n###### Default\n>`undefined`\n\n---\n##### disabled (boolean)\n>`disabled` is used to add the disabled attribute to a form field.\n\n###### Default\n>`undefined`\n\n---\n##### placeholder (string)\n>`placeholder` is used to add placeholder text to some inputs.\n\n###### Default\n>`undefined`\n\n---\n##### description (string)\n>`description` is used to add descriptive text to all inputs.\n\n###### Default\n>`undefined`\n\n---\n##### addonLeft (object)\n>`addonLeft` is used to add an add-on on the left of a field. The object accepts two properties: `text` that sets a simple text and `class` that sets classes to the add-on.\n\n###### Default\n>`undefined`\n\n---\n##### addonRight (object)\n>`addonRight` is used to add an add-on on the right of a field. The object accepts two properties: `text` that sets a simple text and `class` that sets classes to the add-on.\n\n###### Default\n>`undefined`\n\n### Fields\n\n### Form Fields\n\nBelow is a detailed description of each form fields and its custom properties.\n\n#### Input form field\n>The input uses the <input> element and allows you to specify it's type via the type property\n\n##### default (string, optional)\n\n_Example text field_\n```json\n\t{\n\t\t\"type\": \"text\",\n\t\t\"key\": \"firstName\",\n\t\t\"templateOptions\": {\n\t\t  \"type\": \"email\", // or url, or text, etc.\n      \"placeholder\": \"jane doe\",\n      \"label\": \"First name\"\n\t\t}\n\t}\n```\n\n---\n#### Textarea form field\n>The textarea field creates multiline input with a textarea element.\n\n##### default (string, optional)\n\n##### lines (number, optional)\n>`lines` sets the rows attribute for the textarea element.\n\n_Example textarea field_\n```json\n\t{\n\t\t\"type\": \"textarea\",\n\t\t\"key\": \"about\",\n\t\t\"templateOptions\": {\n      \"placeholder\": \"I like puppies\",\n      \"label\": \"Tell me about yourself\",\n      \"rows\": 4,\n      \"cols\": 15\n\t\t}\n\t}\n```\n\n---\n#### Checkbox form field\n>The checkbox field allows checkbox input with a input element set to `type='checkbox'`. It doesn't have any custom properties.\n\n##### default (boolean, optional)\n\n_Example checkbox field_\n```json\n\t{\n\t\t\"type\": \"checkbox\",\n\t\t\"key\": \"checkThis\",\n\t\t\"templateOptions\": {\n      \"label\": \"Check this box\"\n\t\t}\n\t}\n```\n\n---\n#### Radio form field\n>The radio field allows multiple choice input with a series of linked inputs, with `type='radio'`.\n\n##### options (array, required)\n>`options` is an array of options for the radio form field to display. Each option should be an object with a `name`(string) and `value`(string or number).\n\n_Example radio field_\n```json\n\t{\n\t\t\"key\": \"triedEmber\",\n\t\t\"type\": \"radio\",\n\t\t\"templateOptions\": {\n      \"label\": \"Have you tried EmberJs yet?\",\n      \"options\": [\n        {\n          \"name\": \"Yes, and I love it!\",\n          \"value\": \"yesyes\"\n        },\n        {\n          \"name\": \"Yes, but I'm not a fan...\",\n          \"value\": \"yesno\"\n        },\n        {\n          \"name\": \"Nope\",\n          \"value\": \"no\"\n        }\n      ]\n\t\t}\n\t}\n```\n\n---\n#### Select form field\n>The select field allows selection via dropdown using the select element.\n\n##### default (number, optional)\n>The default can be set to the index of one of the `options`.\n\n##### options (array, required)\n>`options` is an array of options for the select form field to display. Each option should be an object with a `name`(string). You may optionally add a `group` to some or all of your options.\n\n_Example select field_\n```json\n\t{\n\t\t\"key\": \"transportation\",\n\t\t\"type\": \"select\",\n\t\t\"templateOptions\": {\n      \"label\": \"How do you get around in the city\",\n      \"options\": [\n        {\n          \"name\": \"Car\"\n        },\n        {\n          \"name\": \"Helicopter\"\n        },\n        {\n          \"name\": \"Sport Utility Vehicle\"\n        },\n        {\n          \"name\": \"Bicycle\",\n          \"group\": \"low emissions\"\n        },\n        {\n          \"name\": \"Skateboard\",\n          \"group\": \"low emissions\"\n        },\n        {\n          \"name\": \"Walk\",\n          \"group\": \"low emissions\"\n        },\n        {\n          \"name\": \"Bus\",\n          \"group\": \"low emissions\"\n        },\n        {\n          \"name\": \"Scooter\",\n          \"group\": \"low emissions\"\n        },\n        {\n          \"name\": \"Train\",\n          \"group\": \"low emissions\"\n        },\n        {\n          \"name\": \"Hot Air Baloon\",\n          \"group\": \"low emissions\"\n        }\n      ]\n\t\t}\n\t}\n```\n\n## Contributing\n\nPlease see the [CONTRIBUTING Guidelines](CONTRIBUTING.md).\n\n## Thanks\n\nA special thanks to [Nimbly](http://gonimbly.com) for creating/sponsoring Angular-Formly's development.\nThanks to [Kent C. Dodds](https://github.com/kentcdodds) for his continued support on the project.\n",
  "readmeFilename": "README.md",
  "gitHead": "f938531ad759b67ce0e367b23a654ec26ac9dce8",
  "bugs": {
    "url": "https://github.com/formly-js/angular-formly-templates-bootstrap/issues"
  },
  "_id": "angular-formly-templates-bootstrap@4.0.3",
  "_shasum": "fe8e37e70ea6e9d2a5a50c7fa5fc6faa7b860d6b",
  "_from": "angular-formly-templates-bootstrap@*"
}
